name: Build & Release Uspacy Notifier

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest ]
        python-version: [ "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            pip install pyinstaller PySide6 websocket-client requests
          fi

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          pyinstaller --noconfirm --clean `
            --name UspacyNotifier `
            --onefile --windowed `
            --collect-all PySide6 --collect-plugins PySide6 `
            --collect-submodules websocket `
            --add-data "icon.png;." `
            --add-data "sounds/1.wav;sounds" `
            main.py
          Rename-Item -Path "dist/UspacyNotifier.exe" -NewName "UspacyNotifier-${{ github.ref_name }}-windows.exe"

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          set -e
          pyinstaller --noconfirm --clean \
            --name UspacyNotifier \
            --onefile --windowed \
            --collect-all PySide6 --collect-plugins PySide6 \
            --collect-submodules websocket \
            --add-data "icon.png:." \
            --add-data "sounds/1.wav:sounds" \
            main.py
          mv "dist/UspacyNotifier" "dist/UspacyNotifier-${{ github.ref_name }}-macos"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.os }}
          path: |
            dist/UspacyNotifier-*
          if-no-files-found: error

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: collected-artifacts

      - name: List collected files
        run: |
          ls -lahR collected-artifacts

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Uspacy Notifier ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            collected-artifacts/**/UspacyNotifier-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}